upstream frontend {
    server frontend:5173;
}

upstream backend {
    server backend:3000;
}



server {
    # O Nginx escutará na porta 80 dentro do container.
    listen 80;

    # Regra para o frontend (Regra Padrão/Catch-all)
    # Esta regra captura todas as requisições que não se encaixam na regra mais específica da API.
    location / {
        # Encaminha a requisição para o serviço definido no upstream 'frontend'.
        proxy_pass http://frontend;

        # Cabeçalhos importantes para o correto funcionamento do proxy. Eles passam
        # informações da requisição original para o serviço de destino.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Configuração essencial para permitir que conexões WebSocket (usadas pelo
        # hot-reloading do Vite) passem pelo proxy.
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Regra para o backend (Regra Específica)
    # Esta regra captura qualquer requisição cujo caminho comece com /api/
    location /api/ {
        # Remove o prefixo /api da URL antes de encaminhar para o backend.
        # Ex: uma chamada para /api/users é transformada em /users.
        # O backend não precisa saber sobre o prefixo /api.
        rewrite ^/api/(.*)$ /$1 break;
        
        # Encaminha a requisição (já com a URL reescrita) para o serviço de backend.
        proxy_pass http://backend;

        # Repassa os cabeçalhos para o backend também.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}